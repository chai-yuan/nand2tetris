	@256 // 程序起点
	D=A
	@SP
	M=D
	@Class1$$RETURN_1// call Sys.init 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@0
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Sys.init
	0;JMP
(Class1$$RETURN_1)
(PROGRAM_BEGIN)
	@PROGRAM_BEGIN
	0;JMP
	// function : Class1.set0
(Class1.set)
	@0
	D=A
	@R13
	M=D
(Class1$Class1.set$INIT_LOOP_)
	@Class1$Class1.set$END_INIT_LOOP_
	D;JEQ
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R13
	MD=M-1
	@Class1$Class1.set$INIT_LOOP_
	0;JMP
(Class1$Class1.set$END_INIT_LOOP_)
	@ARG // push argument 0
	D=M
	@0
	A=D+A
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // pop static 0
	AM=M-1
	D=M
	@Class1.0
	M=D
	@ARG // push argument 1
	D=M
	@1
	A=D+A
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // pop static 1
	AM=M-1
	D=M
	@Class1.1
	M=D
	@0 // push constant 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL // return
	D=M
	@R13
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	AM=M-1
	D=M
	@ARG
	A=M
	M=D
	D=A
	@SP
	M=D+1
	@R13
	AM=M-1
	D=M
	@THAT
	M=D
	@R13
	AM=M-1
	D=M
	@THIS
	M=D
	@R13
	AM=M-1
	D=M
	@ARG
	M=D
	@R13
	AM=M-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
	// function : Class1.get0
(Class1.get)
	@0
	D=A
	@R13
	M=D
(Class1$Class1.get$INIT_LOOP_)
	@Class1$Class1.get$END_INIT_LOOP_
	D;JEQ
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R13
	MD=M-1
	@Class1$Class1.get$INIT_LOOP_
	0;JMP
(Class1$Class1.get$END_INIT_LOOP_)
	@Class1.0 // push static 0
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@Class1.1 // push static 1
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // sub
	AM=M-1
	D=M
	A=A-1
	M=M-D
	@LCL // return
	D=M
	@R13
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	AM=M-1
	D=M
	@ARG
	A=M
	M=D
	D=A
	@SP
	M=D+1
	@R13
	AM=M-1
	D=M
	@THAT
	M=D
	@R13
	AM=M-1
	D=M
	@THIS
	M=D
	@R13
	AM=M-1
	D=M
	@ARG
	M=D
	@R13
	AM=M-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
	@256 // 程序起点
	D=A
	@SP
	M=D
	@Class2$$RETURN_1// call Sys.init 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@0
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Sys.init
	0;JMP
(Class2$$RETURN_1)
(PROGRAM_BEGIN)
	@PROGRAM_BEGIN
	0;JMP
	// function : Class2.set0
(Class2.set)
	@0
	D=A
	@R13
	M=D
(Class2$Class2.set$INIT_LOOP_)
	@Class2$Class2.set$END_INIT_LOOP_
	D;JEQ
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R13
	MD=M-1
	@Class2$Class2.set$INIT_LOOP_
	0;JMP
(Class2$Class2.set$END_INIT_LOOP_)
	@ARG // push argument 0
	D=M
	@0
	A=D+A
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // pop static 0
	AM=M-1
	D=M
	@Class2.0
	M=D
	@ARG // push argument 1
	D=M
	@1
	A=D+A
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // pop static 1
	AM=M-1
	D=M
	@Class2.1
	M=D
	@0 // push constant 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL // return
	D=M
	@R13
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	AM=M-1
	D=M
	@ARG
	A=M
	M=D
	D=A
	@SP
	M=D+1
	@R13
	AM=M-1
	D=M
	@THAT
	M=D
	@R13
	AM=M-1
	D=M
	@THIS
	M=D
	@R13
	AM=M-1
	D=M
	@ARG
	M=D
	@R13
	AM=M-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
	// function : Class2.get0
(Class2.get)
	@0
	D=A
	@R13
	M=D
(Class2$Class2.get$INIT_LOOP_)
	@Class2$Class2.get$END_INIT_LOOP_
	D;JEQ
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R13
	MD=M-1
	@Class2$Class2.get$INIT_LOOP_
	0;JMP
(Class2$Class2.get$END_INIT_LOOP_)
	@Class2.0 // push static 0
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@Class2.1 // push static 1
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // sub
	AM=M-1
	D=M
	A=A-1
	M=M-D
	@LCL // return
	D=M
	@R13
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	AM=M-1
	D=M
	@ARG
	A=M
	M=D
	D=A
	@SP
	M=D+1
	@R13
	AM=M-1
	D=M
	@THAT
	M=D
	@R13
	AM=M-1
	D=M
	@THIS
	M=D
	@R13
	AM=M-1
	D=M
	@ARG
	M=D
	@R13
	AM=M-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
	@256 // 程序起点
	D=A
	@SP
	M=D
	@Sys$$RETURN_1// call Sys.init 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@0
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Sys.init
	0;JMP
(Sys$$RETURN_1)
(PROGRAM_BEGIN)
	@PROGRAM_BEGIN
	0;JMP
	// function : Sys.init0
(Sys.init)
	@0
	D=A
	@R13
	M=D
(Sys$Sys.init$INIT_LOOP_)
	@Sys$Sys.init$END_INIT_LOOP_
	D;JEQ
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R13
	MD=M-1
	@Sys$Sys.init$INIT_LOOP_
	0;JMP
(Sys$Sys.init$END_INIT_LOOP_)
	@6 // push constant 6
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@8 // push constant 8
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@Sys$Sys.init$RETURN_2// call Class1.set 2
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@2
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class1.set
	0;JMP
(Sys$Sys.init$RETURN_2)
	@SP // pop temp 0
	AM=M-1
	D=M
	@R5
	M=D
	@23 // push constant 23
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@15 // push constant 15
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@Sys$Sys.init$RETURN_3// call Class2.set 2
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@2
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class2.set
	0;JMP
(Sys$Sys.init$RETURN_3)
	@SP // pop temp 0
	AM=M-1
	D=M
	@R5
	M=D
	@Sys$Sys.init$RETURN_4// call Class1.get 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@0
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class1.get
	0;JMP
(Sys$Sys.init$RETURN_4)
	@Sys$Sys.init$RETURN_5// call Class2.get 0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@0
	D=A
	@5
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class2.get
	0;JMP
(Sys$Sys.init$RETURN_5)
(Sys$Sys.init$WHILE)// label WHILE
	@Sys$Sys.init$WHILE
	0;JMP
